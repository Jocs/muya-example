{"version":3,"sources":["webpack:///./node_modules/prismjs/plugins/keep-markup/prism-keep-markup.js"],"names":["self","document","Prism","createRange","plugins","KeepMarkup","hooks","add","env","element","children","length","pos","data","f","elt","baseNode","o","clone","cloneNode","posOpen","push","i","l","childNodes","child","nodeType","posClose","keepMarkup","walk","nodeState","nodeStart","node","nodeStartPos","nodeEnd","nodeEndPos","range","setStart","setEnd","appendChild","extractContents","insertNode","detach","forEach","highlightedCode","innerHTML"],"mappings":"oGAAA,SAAAA,EAAAC,GAEA,qBAAAD,KAAAE,OAAAF,EAAAC,YAAAE,cAIAD,MAAAE,QAAAC,YAAA,EAEAH,MAAAI,MAAAC,IAAA,4BAAAC,GACA,GAAAA,EAAAC,QAAAC,SAAAC,OAAA,CAIA,IAAAC,EAAA,EACAC,EAAA,GACAC,EAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GACAD,IAEAC,EAAAC,MAAAH,EAAAI,WAAA,GACAF,EAAAG,QAAAR,EACAC,EAAAQ,KAAAJ,IAEA,QAAAK,EAAA,EAAAC,EAAAR,EAAAS,WAAAb,OAA6CW,EAAAC,EAAOD,IAAA,CACpD,IAAAG,EAAAV,EAAAS,WAAAF,GACA,IAAAG,EAAAC,SACAZ,EAAAW,GACK,IAAAA,EAAAC,WACLd,GAAAa,EAAAZ,KAAAF,QAGAK,IACAC,EAAAU,SAAAf,IAGAE,EAAAN,EAAAC,SAAA,GAEAI,KAAAF,SAEAH,EAAAoB,WAAAf,MAIAX,MAAAI,MAAAC,IAAA,2BAAAC,GACA,GAAAA,EAAAoB,YAAApB,EAAAoB,WAAAjB,OAAA,CAEA,IAAAkB,EAAA,SAAAd,EAAAe,GACA,QAAAR,EAAA,EAAAC,EAAAR,EAAAS,WAAAb,OAA8CW,EAAAC,EAAOD,IAAA,CAErD,IAAAG,EAAAV,EAAAS,WAAAF,GAEA,OAAAG,EAAAC,UACA,IAAAG,EAAAJ,EAAAK,GACA,cAGM,IAAAL,EAAAC,YACNI,EAAAC,WAAAD,EAAAlB,IAAAa,EAAAZ,KAAAF,OAAAmB,EAAAE,KAAAZ,UAEAU,EAAAC,UAAAN,EACAK,EAAAG,aAAAH,EAAAE,KAAAZ,QAAAU,EAAAlB,KAEAkB,EAAAC,WAAAD,EAAAlB,IAAAa,EAAAZ,KAAAF,QAAAmB,EAAAE,KAAAL,WAEAG,EAAAI,QAAAT,EACAK,EAAAK,WAAAL,EAAAE,KAAAL,SAAAG,EAAAlB,KAGAkB,EAAAlB,KAAAa,EAAAZ,KAAAF,QAGA,GAAAmB,EAAAC,WAAAD,EAAAI,QAAA,CAEA,IAAAE,EAAAnC,EAAAE,cAQA,OAPAiC,EAAAC,SAAAP,EAAAC,UAAAD,EAAAG,cACAG,EAAAE,OAAAR,EAAAI,QAAAJ,EAAAK,YACAL,EAAAE,KAAAd,MAAAqB,YAAAH,EAAAI,mBACAJ,EAAAK,WAAAX,EAAAE,KAAAd,OACAkB,EAAAM,UAGA,GAGA,UAIAlC,EAAAoB,WAAAe,QAAA,SAAAX,GACAH,EAAArB,EAAAC,QAAA,CACAuB,OACApB,IAAA,MAIAJ,EAAAoC,gBAAApC,EAAAC,QAAAoC,eA/FA,CAkGC7C,KAAAC","file":"js/chunk-2d0b92df.12ed90be.js","sourcesContent":["(function (self, document) {\n\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.createRange) {\n\t\treturn;\n\t}\n\n\tPrism.plugins.KeepMarkup = true;\n\n\tPrism.hooks.add('before-highlight', function (env) {\n\t\tif (!env.element.children.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar pos = 0;\n\t\tvar data = [];\n\t\tvar f = function (elt, baseNode) {\n\t\t\tvar o = {};\n\t\t\tif (!baseNode) {\n\t\t\t\t// Clone the original tag to keep all attributes\n\t\t\t\to.clone = elt.cloneNode(false);\n\t\t\t\to.posOpen = pos;\n\t\t\t\tdata.push(o);\n\t\t\t}\n\t\t\tfor (var i = 0, l = elt.childNodes.length; i < l; i++) {\n\t\t\t\tvar child = elt.childNodes[i];\n\t\t\t\tif (child.nodeType === 1) { // element\n\t\t\t\t\tf(child);\n\t\t\t\t} else if(child.nodeType === 3) { // text\n\t\t\t\t\tpos += child.data.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!baseNode) {\n\t\t\t\to.posClose = pos;\n\t\t\t}\n\t\t};\n\t\tf(env.element, true);\n\n\t\tif (data && data.length) {\n\t\t\t// data is an array of all existing tags\n\t\t\tenv.keepMarkup = data;\n\t\t}\n\t});\n\n\tPrism.hooks.add('after-highlight', function (env) {\n\t\tif(env.keepMarkup && env.keepMarkup.length) {\n\n\t\t\tvar walk = function (elt, nodeState) {\n\t\t\t\tfor (var i = 0, l = elt.childNodes.length; i < l; i++) {\n\n\t\t\t\t\tvar child = elt.childNodes[i];\n\n\t\t\t\t\tif (child.nodeType === 1) { // element\n\t\t\t\t\t\tif (!walk(child, nodeState)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if (child.nodeType === 3) { // text\n\t\t\t\t\t\tif(!nodeState.nodeStart && nodeState.pos + child.data.length > nodeState.node.posOpen) {\n\t\t\t\t\t\t\t// We found the start position\n\t\t\t\t\t\t\tnodeState.nodeStart = child;\n\t\t\t\t\t\t\tnodeState.nodeStartPos = nodeState.node.posOpen - nodeState.pos;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(nodeState.nodeStart && nodeState.pos + child.data.length >= nodeState.node.posClose) {\n\t\t\t\t\t\t\t// We found the end position\n\t\t\t\t\t\t\tnodeState.nodeEnd = child;\n\t\t\t\t\t\t\tnodeState.nodeEndPos = nodeState.node.posClose - nodeState.pos;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnodeState.pos += child.data.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nodeState.nodeStart && nodeState.nodeEnd) {\n\t\t\t\t\t\t// Select the range and wrap it with the clone\n\t\t\t\t\t\tvar range = document.createRange();\n\t\t\t\t\t\trange.setStart(nodeState.nodeStart, nodeState.nodeStartPos);\n\t\t\t\t\t\trange.setEnd(nodeState.nodeEnd, nodeState.nodeEndPos);\n\t\t\t\t\t\tnodeState.node.clone.appendChild(range.extractContents());\n\t\t\t\t\t\trange.insertNode(nodeState.node.clone);\n\t\t\t\t\t\trange.detach();\n\n\t\t\t\t\t\t// Process is over\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\t// For each tag, we walk the DOM to reinsert it\n\t\t\tenv.keepMarkup.forEach(function (node) {\n\t\t\t\twalk(env.element, {\n\t\t\t\t\tnode: node,\n\t\t\t\t\tpos: 0\n\t\t\t\t});\n\t\t\t});\n\t\t\t// Store new highlightedCode for later hooks calls\n\t\t\tenv.highlightedCode = env.element.innerHTML;\n\t\t}\n\t});\n}(self, document));\n"],"sourceRoot":""}
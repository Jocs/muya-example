{"version":3,"sources":["webpack:///./node_modules/prismjs/components/prism-matlab.js"],"names":["Prism","languages","matlab","comment","string","pattern","greedy","number","keyword","function","operator","punctuation"],"mappings":"iGAAAA,MAAAC,UAAAC,OAAA,CACAC,QAAA,CACA,iBACA,OAEAC,OAAA,CACAC,QAAA,uBACAC,QAAA,GAGAC,OAAA,6DACAC,QAAA,8HACAC,SAAA,qBACAC,SAAA,0CACAC,YAAA","file":"js/chunk-2d21e597.80b35519.js","sourcesContent":["Prism.languages.matlab = {\n\t'comment': [\n\t\t/%\\{[\\s\\S]*?\\}%/,\n\t\t/%.+/\n\t],\n\t'string': {\n\t\tpattern: /\\B'(?:''|[^'\\r\\n])*'/,\n\t\tgreedy: true\n\t},\n\t// FIXME We could handle imaginary numbers as a whole\n\t'number': /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n\t'keyword': /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n\t'function': /(?!\\d)\\w+(?=\\s*\\()/,\n\t'operator': /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n\t'punctuation': /\\.{3}|[.,;\\[\\](){}!]/\n};"],"sourceRoot":""}
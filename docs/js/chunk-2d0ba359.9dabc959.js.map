{"version":3,"sources":["webpack:///./node_modules/prismjs/components/prism-coffeescript.js"],"names":["Prism","comment","interpolation","pattern","alias","languages","coffeescript","extend","string","greedy","inside","keyword","class-member","insertBefore","multiline-comment","block-regex","inline-javascript","delimiter","rest","javascript","multiline-string","property","coffee"],"mappings":"oGAAA,SAAAA,GAGA,IAAAC,EAAA,YACAC,EAAA,CACAC,QAAA,aACAC,MAAA,YAGAJ,EAAAK,UAAAC,aAAAN,EAAAK,UAAAE,OAAA,cACAN,UACAO,OAAA,CAGA,CACAL,QAAA,yBACAM,QAAA,GAGA,CAEAN,QAAA,yBACAM,QAAA,EACAC,OAAA,CACAR,mBAIAS,QAAA,mSACAC,eAAA,CACAT,QAAA,aACAC,MAAA,cAIAJ,EAAAK,UAAAQ,aAAA,0BACAC,oBAAA,CACAX,QAAA,iBACAC,MAAA,WAIAW,cAAA,CACAZ,QAAA,qBACAC,MAAA,QACAM,OAAA,CACAT,UACAC,oBAKAF,EAAAK,UAAAQ,aAAA,yBACAG,oBAAA,CACAb,QAAA,yBACAO,OAAA,CACAO,UAAA,CACAd,QAAA,QACAC,MAAA,eAEAc,KAAAlB,EAAAK,UAAAc,aAKAC,mBAAA,CACA,CACAjB,QAAA,iBACAM,QAAA,EACAL,MAAA,UAEA,CACAD,QAAA,iBACAM,QAAA,EACAL,MAAA,SACAM,OAAA,CACAR,qBAOAF,EAAAK,UAAAQ,aAAA,0BAEAQ,SAAA,kCAGArB,EAAAK,UAAAC,aAAA,mBAEAN,EAAAK,UAAAiB,OAAAtB,EAAAK,UAAAC,cA1FA,CA2FCN","file":"js/chunk-2d0ba359.9dabc959.js","sourcesContent":["(function(Prism) {\n\n// Ignore comments starting with { to privilege string interpolation highlighting\nvar comment = /#(?!\\{).+/,\n    interpolation = {\n    \tpattern: /#\\{[^}]+\\}/,\n    \talias: 'variable'\n    };\n\nPrism.languages.coffeescript = Prism.languages.extend('javascript', {\n\t'comment': comment,\n\t'string': [\n\n\t\t// Strings are multiline\n\t\t{\n\t\t\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t{\n\t\t\t// Strings are multiline\n\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t}\n\t],\n\t'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n\t'class-member': {\n\t\tpattern: /@(?!\\d)\\w+/,\n\t\talias: 'variable'\n\t}\n});\n\nPrism.languages.insertBefore('coffeescript', 'comment', {\n\t'multiline-comment': {\n\t\tpattern: /###[\\s\\S]+?###/,\n\t\talias: 'comment'\n\t},\n\n\t// Block regexp can contain comments and interpolation\n\t'block-regex': {\n\t\tpattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n\t\talias: 'regex',\n\t\tinside: {\n\t\t\t'comment': comment,\n\t\t\t'interpolation': interpolation\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('coffeescript', 'string', {\n\t'inline-javascript': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n\t\tinside: {\n\t\t\t'delimiter': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\trest: Prism.languages.javascript\n\t\t}\n\t},\n\n\t// Block strings\n\t'multiline-string': [\n\t\t{\n\t\t\tpattern: /'''[\\s\\S]*?'''/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t{\n\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\tinterpolation: interpolation\n\t\t\t}\n\t\t}\n\t]\n\n});\n\nPrism.languages.insertBefore('coffeescript', 'keyword', {\n\t// Object property\n\t'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n});\n\ndelete Prism.languages.coffeescript['template-string'];\n\nPrism.languages.coffee = Prism.languages.coffeescript;\n}(Prism));"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/prismjs/components/prism-soy.js"],"names":["Prism","stringPattern","numberPattern","languages","soy","comment","pattern","lookbehind","greedy","command-arg","alias","inside","punctuation","parameter","keyword","delimiter","property","variable","string","number","function","boolean","operator","hooks","add","env","soyPattern","soyLitteralStart","soyLitteralEnd","soyLitteralMode","buildPlaceholders","match","tokenizePlaceholders"],"mappings":"kGAAA,SAAAA,GACA,IAAAC,EAAA,iDACAC,EAAA,oDAEAF,EAAAG,UAAAC,IAAA,CACAC,QAAA,CACA,mBACA,CACAC,QAAA,aACAC,YAAA,EACAC,QAAA,IAGAC,cAAA,CACAH,QAAA,yFACAC,YAAA,EACAG,MAAA,SACAC,OAAA,CACAC,YAAA,OAGAC,UAAA,CACAP,QAAA,mCACAC,YAAA,EACAG,MAAA,YAEAI,QAAA,CACA,CACAR,QAAA,kNACAC,YAAA,GAEA,2FAEAQ,UAAA,CACAT,QAAA,gBACAI,MAAA,eAEAM,SAAA,WACAC,SAAA,CACAX,QAAA,0CACAK,OAAA,CACAO,OAAA,CACAZ,QAAAL,EACAO,QAAA,GAEAW,OAAAjB,EACAU,YAAA,aAGAM,OAAA,CACAZ,QAAAL,EACAO,QAAA,GAEAY,SAAA,CACA,YACA,CACAd,QAAA,oBACAC,YAAA,IAGAc,QAAA,qBACAF,OAAAjB,EACAoB,SAAA,kDACAV,YAAA,kBAIAZ,EAAAuB,MAAAC,IAAA,2BAAAC,GACA,IAAAC,EAAA,2CACAC,EAAA,YACAC,EAAA,aACAC,GAAA,EAEA7B,EAAAG,UAAA,qBAAA2B,kBAAAL,EAAA,MAAAC,EAAA,SAAAK,GAMA,OAJAA,IAAAH,IACAC,GAAA,IAGAA,IACAE,IAAAJ,IACAE,GAAA,IAGA,OAOA7B,EAAAuB,MAAAC,IAAA,0BAAAC,GACAzB,EAAAG,UAAA,qBAAA6B,qBAAAP,EAAA,UA5FA,CA+FCzB","file":"js/chunk-2d226ccb.b352419d.js","sourcesContent":["(function (Prism) {\n\tvar stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\tvar numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n\n\tPrism.languages.soy = {\n\t\t'comment': [\n\t\t\t/\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\t{\n\t\t\t\tpattern: /(\\s)\\/\\/.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'command-arg': {\n\t\t\tpattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./\n\t\t\t}\n\t\t},\n\t\t'parameter': {\n\t\t\tpattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'variable'\n\t\t},\n\t\t'keyword': [\n\t\t\t{\n\t\t\t\tpattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/\n\t\t],\n\t\t'delimiter': {\n\t\t\tpattern: /^{+\\/?|\\/?}+$/,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'property': /\\w+(?==)/,\n\t\t'variable': {\n\t\t\tpattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n\t\t\tinside: {\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: stringPattern,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t'number': numberPattern,\n\t\t\t\t'punctuation': /[\\[\\].?]/\n\t\t\t}\n\t\t},\n\t\t'string': {\n\t\t\tpattern: stringPattern,\n\t\t\tgreedy: true\n\t\t},\n\t\t'function': [\n\t\t\t/\\w+(?=\\()/,\n\t\t\t{\n\t\t\t\tpattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'number': numberPattern,\n\t\t'operator': /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n\t\t'punctuation': /[{}()\\[\\]|.,:]/\n\t};\n\n\t// Tokenize all inline Soy expressions\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tvar soyPattern = /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g;\n\t\tvar soyLitteralStart = '{literal}';\n\t\tvar soyLitteralEnd = '{/literal}';\n\t\tvar soyLitteralMode = false;\n\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'soy', soyPattern, function (match) {\n\t\t\t// Soy tags inside {literal} block are ignored\n\t\t\tif (match === soyLitteralEnd) {\n\t\t\t\tsoyLitteralMode = false;\n\t\t\t}\n\n\t\t\tif (!soyLitteralMode) {\n\t\t\t\tif (match === soyLitteralStart) {\n\t\t\t\t\tsoyLitteralMode = true;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t});\n\n\t// Re-insert the tokens after tokenizing\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'soy');\n\t});\n\n}(Prism));"],"sourceRoot":""}
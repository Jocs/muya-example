{"version":3,"sources":["webpack:///./node_modules/prismjs2/components/prism-smarty.js"],"names":["Prism","languages","smarty","comment","delimiter","pattern","alias","string","number","variable","lookbehind","function","attr-name","inside","operator","punctuation","keyword","insertBefore","smarty-comment","hooks","add","env","smartyPattern","smartyLitteralStart","smartyLitteralEnd","smartyLitteralMode","buildPlaceholders","match","tokenizePlaceholders"],"mappings":"kGAKA,SAAAA,GAEAA,EAAAC,UAAAC,OAAA,CACAC,QAAA,mBACAC,UAAA,CACAC,QAAA,WACAC,MAAA,eAEAC,OAAA,mCACAC,OAAA,2DACAC,SAAA,CACA,cACA,cACA,CACAJ,QAAA,mBACAK,YAAA,GAEA,CACAL,QAAA,sBACAK,YAAA,IAGAC,SAAA,CACA,CACAN,QAAA,qBACAK,YAAA,GAEA,gBACA,mBAEAE,YAAA,CAEAP,QAAA,2BACAQ,OAAA,CACAJ,SAAA,CACAJ,QAAA,kBACAK,YAAA,GAEAI,SAAA,MAGAC,YAAA,CACA,mBAEAD,SAAA,CACA,mCACA,iDACA,kDAEAE,QAAA,oCAKAhB,EAAAC,UAAAgB,aAAA,gBACAC,iBAAA,CACAb,QAAA,mBACAC,MAAA,wBAKAN,EAAAmB,MAAAC,IAAA,2BAAAC,GACA,IAAAC,EAAA,iCACAC,EAAA,YACAC,EAAA,aACAC,GAAA,EAEAzB,EAAAC,UAAA,qBAAAyB,kBAAAL,EAAA,SAAAC,EAAA,SAAAK,GAMA,OAJAA,IAAAH,IACAC,GAAA,IAGAA,IACAE,IAAAJ,IACAE,GAAA,IAGA,OAOAzB,EAAAmB,MAAAC,IAAA,0BAAAC,GACArB,EAAAC,UAAA,qBAAA2B,qBAAAP,EAAA,aAvFA,CA0FCrB","file":"js/chunk-2d0bff0d.3dd1b045.js","sourcesContent":["/* TODO\n\tAdd support for variables inside double quoted strings\n\tAdd support for {php}\n*/\n\n(function(Prism) {\n\n\tPrism.languages.smarty = {\n\t\t'comment': /\\{\\*[\\s\\S]*?\\*\\}/,\n\t\t'delimiter': {\n\t\t\tpattern: /^\\{|\\}$/i,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t'number': /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n\t\t'variable': [\n\t\t\t/\\$(?!\\d)\\w+/,\n\t\t\t/#(?!\\d)\\w+#/,\n\t\t\t{\n\t\t\t\tpattern: /(\\.|->)(?!\\d)\\w+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'function': [\n\t\t\t{\n\t\t\t\tpattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/^\\/?(?!\\d)\\w+/,\n\t\t\t/(?!\\d)\\w+(?=\\()/\n\t\t],\n\t\t'attr-name': {\n\t\t\t// Value is made optional because it may have already been tokenized\n\t\t\tpattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n\t\t\tinside: {\n\t\t\t\t\"variable\": {\n\t\t\t\t\tpattern: /(=\\s*)(?!\\d)\\w+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t\"operator\": /=/\n\t\t\t}\n\t\t},\n\t\t'punctuation': [\n\t\t\t/[\\[\\]().,:`]|->/\n\t\t],\n\t\t'operator': [\n\t\t\t/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n\t\t\t/\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n\t\t\t/\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/\n\t\t],\n\t\t'keyword': /\\b(?:false|off|on|no|true|yes)\\b/\n\t};\n\n\t// Comments are inserted at top so that they can\n\t// surround markup\n\tPrism.languages.insertBefore('smarty', 'tag', {\n\t\t'smarty-comment': {\n\t\t\tpattern: /\\{\\*[\\s\\S]*?\\*\\}/,\n\t\t\talias: ['smarty','comment']\n\t\t}\n\t});\n\n\t// Tokenize all inline Smarty expressions\n\tPrism.hooks.add('before-tokenize', function(env) {\n\t\tvar smartyPattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g;\n\t\tvar smartyLitteralStart = '{literal}';\n\t\tvar smartyLitteralEnd = '{/literal}';\n\t\tvar smartyLitteralMode = false;\n\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'smarty', smartyPattern, function (match) {\n\t\t\t// Smarty tags inside {literal} block are ignored\n\t\t\tif(match === smartyLitteralEnd) {\n\t\t\t\tsmartyLitteralMode = false;\n\t\t\t}\n\n\t\t\tif(!smartyLitteralMode) {\n\t\t\t\tif(match === smartyLitteralStart) {\n\t\t\t\t\tsmartyLitteralMode = true;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t});\n\n\t// Re-insert the tokens after tokenizing\n\tPrism.hooks.add('after-tokenize', function(env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty');\n\t});\n\n}(Prism));"],"sourceRoot":""}